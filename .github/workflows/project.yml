name: Terraform CI/CD Pipeline

env:
  working-directory: .

on:
  push:
    branches: ["main", "master"]
  pull_request:
    branches: ["main", "master"]
  workflow_dispatch:

jobs:
  pipeline:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: "us-east-1a"
      # TF_CLI_ARGS: "-input=false -auto-approve"
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ${{ env.working-directory }}

      - name: Terraform Validate
        id: validate
        run: terraform validate
        working-directory: ${{ env.working-directory }}

      - name: Terraform Plan
        id: plan
        run: terraform plan
        working-directory: ${{ env.working-directory }}
      
      - name: Check Terraform Plan status
        if: steps.plan.outcome == 'failure'
        run: echo "There was an error in the Terraform plan. Please review the code."

      - name: Terraform Apply
        id: apply
        if: steps.plan.outcome != 'failure'
        run: terraform apply -auto-approve
        working-directory: ${{ env.working-directory }}

      # Uncomment the following block if you want to include Terraform destroy step
      # - name: Terraform Destroy
      #   id: destroy
      #   run: terraform destroy -auto-approve
      #   working-directory: ${{ env.working-directory }}










# name: Terraform Deployment

# on:
#   push:
#     branches:
#       - main  # Change to your main branch name

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     env:
#       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#       AWS_DEFAULT_REGION: "us-east-1a"  # Replace with your AWS region
#       TF_CLI_ARGS: "-input=false -auto-approve"  # Optional Terraform CLI arguments

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Set up Terraform
#       uses: hashicorp/setup-terraform@v1
#       with:
#         terraform_version: v1.7.3  # Updated Terraform version

#     - name: Terraform Init
#       run: terraform init -upgrade=true

#     - name: Terraform Plan
#       run: terraform plan 

#     - name: Terraform Apply
#       run: terraform apply 

#     # - name: Cleanup
#     #   run: terraform destroy -auto-approve
#     #   if: always()

#     - name: Notify on failure
#       if: failure()
#       run: echo "Terraform deployment failed. Check the workflow logs for details."
